# Generated by Django 3.1.1 on 2020-11-30 16:17
from django.db import migrations
from django.db.migrations import RunPython
from django.db.models import Count, Value, CharField
from django.db.models.functions import Concat, Upper


def clean_duplicates(apps, schema_editor):
    InternshipMaster = apps.get_model('internship', 'InternshipMaster')
    MasterAllocation = apps.get_model('internship', 'MasterAllocation')

    # get master duplicates concatenating full name + email + email_private
    master_duplicates = InternshipMaster.objects.values('first_name', 'last_name', 'email', 'email_private').annotate(
        fullname=Concat(
            Upper('first_name'), Value(' '), Upper('last_name'),
            Value(' - '), 'email', 'email_private', output_field=CharField()
        )
    ).annotate(
        count_fullname=Count('fullname')
    ).order_by('count_fullname').filter(count_fullname__gt=1)

    # retrieve all master's allocations into one instance of master and delete the others
    for duplicate in master_duplicates:
        duplicate_ids = InternshipMaster.objects.filter(
            first_name=duplicate['first_name'],
            last_name=duplicate['last_name'],
            email=duplicate['email'],
            email_private=duplicate['email_private']
        ).values_list('id', flat=True)
        last_id = duplicate_ids.last()
        MasterAllocation.objects.filter(master_id__in=duplicate_ids).update(master_id=last_id)
        to_delete_ids = duplicate_ids.exclude(id=last_id)
        InternshipMaster.objects.filter(id__in=to_delete_ids).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('internship', '0091_clean_master_emails'),
    ]

    operations = [
        # clean duplicates
        migrations.RunPython(clean_duplicates, RunPython.noop),
    ]
